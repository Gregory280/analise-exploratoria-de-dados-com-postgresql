-- [13] Distribuição da Receita por vendedor
WITH
	VENDAS_POR_VENDEDOR AS (
		SELECT
			SELLER_ID,
			SUM(PRICE) AS VALOR_TOTAL
		FROM
			OLIST_PUBLIC_DATASET.OLIST_ORDER_ITEMS
		GROUP BY
			SELLER_ID
	)
SELECT
	ROUND(AVG(VALOR_TOTAL), 2) AS MEDIA_RECEITA,
	ROUND(
		(
			PERCENTILE_CONT(0.25) WITHIN GROUP (
				ORDER BY
					VALOR_TOTAL
			)
		)::NUMERIC,
		2
	) AS PRIMEIRO_QUARTIL,
	ROUND(
		(
			PERCENTILE_CONT(0.5) WITHIN GROUP (
				ORDER BY
					VALOR_TOTAL
			)
		)::NUMERIC,
		2
	) AS MEDIANA,
	ROUND(
		(
			PERCENTILE_CONT(0.75) WITHIN GROUP (
				ORDER BY
					VALOR_TOTAL
			)
		)::NUMERIC,
		2
	) AS TERCEIRO_QUARTIL,
	ROUND(STDDEV(VALOR_TOTAL), 2) AS DESVIO_PADRAO_VALOR
FROM
	VENDAS_POR_VENDEDOR;

-- [14] Distribuição de pedidos por clientes
WITH
	PEDIDOS_POR_CLIENTES AS (
		SELECT
			ORD.CUSTOMER_ID,
			COUNT(ORI.ORDER_ID) AS QTD_PEDIDOS
		FROM
			OLIST_PUBLIC_DATASET.OLIST_ORDERS AS ORD
			JOIN OLIST_PUBLIC_DATASET.OLIST_ORDER_ITEMS AS ORI ON ORD.ORDER_ID = ORI.ORDER_ID
		GROUP BY
			ORD.CUSTOMER_ID
	)
SELECT
	ROUND(AVG(QTD_PEDIDOS), 2) MEDIA_PEDIDOS,
	ROUND(
		(
			PERCENTILE_CONT(0.25) WITHIN GROUP (
				ORDER BY
					QTD_PEDIDOS
			)
		)::NUMERIC,
		2
	) AS PRIMEIRO_QUARTIL,
	ROUND(
		(
			PERCENTILE_CONT(0.5) WITHIN GROUP (
				ORDER BY
					QTD_PEDIDOS
			)
		)::NUMERIC,
		2
	) AS MEDIANA,
	ROUND(
		(
			PERCENTILE_CONT(0.75) WITHIN GROUP (
				ORDER BY
					QTD_PEDIDOS
			)
		)::NUMERIC,
		2
	) ASTERCEIRO_QUARTIL,
	ROUND(STDDEV(QTD_PEDIDOS), 2) AS DESVIO_PADRAO_VALOR
FROM
	PEDIDOS_POR_CLIENTES;

-- [15] Distribuição exata em porcentagem por quantidade de pedido por clientes realizado
WITH
	PEDIDOS_POR_CLIENTES AS (
		SELECT
			ORD.CUSTOMER_ID,
			COUNT(ORI.ORDER_ID) AS QTD_PEDIDOS
		FROM
			OLIST_PUBLIC_DATASET.OLIST_ORDERS AS ORD
			JOIN OLIST_PUBLIC_DATASET.OLIST_ORDER_ITEMS AS ORI ON ORD.ORDER_ID = ORI.ORDER_ID
		GROUP BY
			ORD.CUSTOMER_ID
	)
SELECT
	QTD_PEDIDOS,
	COUNT(*) AS QTD_CLIENTES,
	CONCAT(
		ROUND(100.0 * COUNT(*) / SUM(COUNT(*)) OVER (), 1),
		'%'
	) AS PORCENTAGEM_CLIENTES
FROM
	PEDIDOS_POR_CLIENTES
GROUP BY
	QTD_PEDIDOS
ORDER BY
	QTD_PEDIDOS;

-- [16] Distribuição da quantidade de pedidos por cliente por estado
WITH
	PEDIDOS_POR_CLIENTES AS (
		SELECT
			ORD.CUSTOMER_ID,
			CUS.CUSTOMER_STATE,
			COUNT(ORI.ORDER_ID) AS QTD_PEDIDOS
		FROM
			OLIST_PUBLIC_DATASET.OLIST_ORDERS AS ORD
			JOIN OLIST_PUBLIC_DATASET.OLIST_ORDER_ITEMS AS ORI ON ORD.ORDER_ID = ORI.ORDER_ID
			JOIN OLIST_PUBLIC_DATASET.OLIST_CUSTOMERS AS CUS ON ORD.CUSTOMER_ID = CUS.CUSTOMER_ID
		GROUP BY
			ORD.CUSTOMER_ID,
			CUS.CUSTOMER_STATE
	),
	FREQUENCIA_POR_ESTADO AS (
		SELECT
			CUSTOMER_STATE,
			QTD_PEDIDOS,
			COUNT(*) AS QTD_CLIENTES
		FROM
			PEDIDOS_POR_CLIENTES
		GROUP BY
			CUSTOMER_STATE,
			QTD_PEDIDOS
	)
SELECT
	CUSTOMER_STATE,
	QTD_PEDIDOS,
	QTD_CLIENTES,
	CONCAT(
		ROUND(
			100.0 * QTD_CLIENTES / SUM(QTD_CLIENTES) OVER (
				PARTITION BY
					CUSTOMER_STATE
			),
			2
		),
		'%'
	) AS PORCENTAGEM_CLIENTES_POR_ESTADO
FROM
	FREQUENCIA_POR_ESTADO
ORDER BY
	CUSTOMER_STATE,
	QTD_PEDIDOS;

-- [17] Restringindo a distribuição (por estado) apenas para clientes que realizaram mais de uma compra.
WITH
	PEDIDOS_POR_CLIENTES AS (
		SELECT
			ORD.CUSTOMER_ID,
			CUS.CUSTOMER_STATE,
			COUNT(ORI.ORDER_ID) AS QTD_PEDIDOS
		FROM
			OLIST_PUBLIC_DATASET.OLIST_ORDERS AS ORD
			JOIN OLIST_PUBLIC_DATASET.OLIST_ORDER_ITEMS AS ORI ON ORD.ORDER_ID = ORI.ORDER_ID
			JOIN OLIST_PUBLIC_DATASET.OLIST_CUSTOMERS AS CUS ON ORD.CUSTOMER_ID = CUS.CUSTOMER_ID
		GROUP BY
			ORD.CUSTOMER_ID,
			CUS.CUSTOMER_STATE
		HAVING
			COUNT(ORD.ORDER_ID) > 1
	),
	FREQUENCIA_POR_ESTADO AS (
		SELECT
			CUSTOMER_STATE,
			QTD_PEDIDOS,
			COUNT(*) AS QTD_CLIENTES
		FROM
			PEDIDOS_POR_CLIENTES
		GROUP BY
			CUSTOMER_STATE,
			QTD_PEDIDOS
	)
SELECT
	CUSTOMER_STATE,
	QTD_PEDIDOS,
	QTD_CLIENTES,
	CONCAT(
		ROUND(
			100.0 * QTD_CLIENTES / SUM(QTD_CLIENTES) OVER (
				PARTITION BY
					CUSTOMER_STATE
			),
			2
		),
		'%'
	) AS PORCENTAGEM_CLIENTES_POR_ESTADO
FROM
	FREQUENCIA_POR_ESTADO
ORDER BY
	CUSTOMER_STATE,
	QTD_PEDIDOS;