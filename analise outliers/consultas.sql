-- [18] Detectando outliers em colunas num√©ricas
WITH
	ESTATISTICAS AS (
		SELECT
			AVG(PRICE) AS AVG_PRICE,
			STDDEV(PRICE) AS STDDEV_PRICE,
			AVG(FREIGHT_VALUE) AS AVG_FREGHT,
			STDDEV(FREIGHT_VALUE) AS STDDEV_FREIGHT
		FROM
			OLIST_PUBLIC_DATASET.OLIST_ORDER_ITEMS
	)
SELECT
	ORDER_ID,
	ORDER_ITEM_ID,
	PRODUCT_ID,
	SELLER_ID,
	SHIPPING_LIMIT_DATE,
	PRICE,
	FREIGHT_VALUE
FROM
	OLIST_PUBLIC_DATASET.OLIST_ORDER_ITEMS,
	ESTATISTICAS
WHERE
	PRICE < (AVG_PRICE - 5 * STDDEV_PRICE)
	OR PRICE > (AVG_PRICE + 5 * STDDEV_PRICE)
	OR FREIGHT_VALUE < (AVG_FREGHT - 5 * STDDEV_FREIGHT)
	OR FREIGHT_VALUE > (AVG_FREGHT + 5 * STDDEV_FREIGHT);

-- [19] Detectando outliers com base no valor total dos pedidos
WITH
	PEDIDOS AS (
		SELECT
			ORDER_ID,
			SUM(PRICE + FREIGHT_VALUE) AS TOTAL_PEDIDO
		FROM
			OLIST_PUBLIC_DATASET.OLIST_ORDER_ITEMS
		GROUP BY
			ORDER_ID
	),
	ESTATISTICAS AS (
		SELECT
			AVG(TOTAL_PEDIDO) AS AVG_TOTAL,
			STDDEV(TOTAL_PEDIDO) AS STDDEV_TOTAL
		FROM
			PEDIDOS
	),
	OUTLIERS_PEDIDOS AS (
		SELECT
			ORDER_ID,
			TOTAL_PEDIDO
		FROM
			PEDIDOS,
			ESTATISTICAS
		WHERE
			TOTAL_PEDIDO < (AVG_TOTAL - 5 * STDDEV_TOTAL)
			OR TOTAL_PEDIDO > (AVG_TOTAL + 5 * STDDEV_TOTAL)
	)
SELECT
	ORI.ORDER_ID,
	ORI.PRODUCT_ID,
	ORI.SELLER_ID,
	OP.TOTAL_PEDIDO
FROM
	OLIST_PUBLIC_DATASET.OLIST_ORDER_ITEMS AS ORI
	JOIN OUTLIERS_PEDIDOS AS OP ON ORI.ORDER_ID = OP.ORDER_IDORDER BY
	OP.TOTAL_PEDIDO DESC;


-- [20] Pegando o top 0.5% ou 99 percentil
WITH
	PEDIDOS AS (
		SELECT
			ORDER_ID,
			SUM(PRICE + FREIGHT_VALUE) AS TOTAL_PEDIDO
		FROM
			OLIST_PUBLIC_DATASET.OLIST_ORDER_ITEMS
		GROUP BY
			ORDER_ID
	),
	PERCENTILE AS (
		SELECT
			PERCENTILE_CONT(0.995) WITHIN GROUP (
				ORDER BY
					TOTAL_PEDIDO
			) AS TOP_05
		FROM
			PEDIDOS
	),
	TOP05 AS (
		SELECT
			ORDER_ID,
			TOTAL_PEDIDO
		FROM
			PEDIDOS,
			PERCENTILE
		WHERE
			TOTAL_PEDIDO >= TOP_05
	)
SELECT
	ORI.ORDER_ID,
	ORI.PRODUCT_ID,
	ORI.SELLER_ID,	
	TOP.TOTAL_PEDIDO
FROM
	OLIST_PUBLIC_DATASET.OLIST_ORDER_ITEMS AS ORI
	JOIN TOP05 AS TOP ON ORI.ORDER_ID = TOP.ORDER_ID
ORDER BY
	TOP.TOTAL_PEDIDO DESC;